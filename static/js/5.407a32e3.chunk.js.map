{"version":3,"file":"static/js/5.407a32e3.chunk.js","mappings":"wMAAO,SAASA,EAAQC,GAEpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAIP,EAAMC,GAChBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,CACf,CACA,OAAOP,CACX,C,aCqCA,EA/Bc,WAAO,IAADQ,EAAAC,EAEZC,EAAmC,QAAvBF,EAAiB,QAAjBC,GADDE,EAAAA,EAAAA,MACaC,aAAK,IAAAH,OAAA,EAAdA,EAAgBI,YAAI,IAAAL,EAAAA,EAAI,UAErCM,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACAG,GAAMC,EAAAA,EAAAA,MAAND,EAIFjB,EACM,UAHMmB,EAAAA,EAAAA,MAAVC,MAIFN,EAASO,OAAOC,MAAK,SAAAF,GAAK,OAAIA,EAAMG,IAAI,IAAQ,KAChDT,EAASO,OAAOC,MAAK,SAAAF,GAAK,OAAIA,EAAMI,IAAI,IAAQ,KAEtD,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,GAAIpB,EAAcqB,UAAU,QAAOJ,UAC7CC,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CAAAL,SAAEV,EAAE,aAEfW,EAAAA,EAAAA,KAACK,EAAAA,GAAU,CAACF,UAAU,SAAQJ,SAC3B5B,EAAQC,GAAOkC,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAMC,EAAIF,EAAJE,KAAI,OAC/BZ,EAAAA,EAAAA,MAACa,EAAAA,GAAQ,CAAAX,SAAA,EACPC,EAAAA,EAAAA,KAACW,EAAAA,GAAG,CAACC,IAAKH,EAAMI,IAAG,QAAAC,OAAUN,MAC7BR,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAAAhB,SAAEV,EAAEmB,QAFIQ,EAAAA,EAAAA,MAGJ,QAKrB,C","sources":["utils/shuffle.js","pages/Skills/Skill.jsx"],"sourcesContent":["export function shuffle(array) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const x = array[i];\n        array[i] = array[j];\n        array[j] = x;\n    }\n    return array;\n}","import {\n  ListStyled,\n  ListItem,\n  LinkStyled,\n  Img,\n  Text,\n  SpanBack,\n} from '../Skills/Skills.styled';\nimport { useContext } from 'react';\nimport { ThrowContext } from '../../components/Context/Context';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { useTranslation } from 'react-i18next';\nimport { shuffle } from 'utils/shuffle';\n\nconst Skill = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/skills';\n\n  const { selected } = useContext(ThrowContext);\n  const { t } = useTranslation();\n\n  const { skill } = useParams();\n\n  const array =\n    skill === 'soft'\n      ? selected.skills.find(skill => skill.soft)['soft']\n      : selected.skills.find(skill => skill.tech)['tech'];\n\n  return (\n    <>\n      <LinkStyled to={backLinkHref} className=\"first\">\n        <SpanBack>{t('Back')}</SpanBack>\n      </LinkStyled>\n      <ListStyled className=\"second\">\n        {shuffle(array).map(({ name, icon }) => (\n          <ListItem key={nanoid()}>\n            <Img src={icon} alt={`Icon ${name}`} />\n            <Text>{t(name)}</Text>\n          </ListItem>\n        ))}\n      </ListStyled>\n    </>\n  );\n};\n\nexport default Skill;\n"],"names":["shuffle","array","i","length","j","Math","floor","random","x","_location$state$from","_location$state","backLinkHref","useLocation","state","from","selected","useContext","ThrowContext","t","useTranslation","useParams","skill","skills","find","soft","tech","_jsxs","_Fragment","children","_jsx","LinkStyled","to","className","SpanBack","ListStyled","map","_ref","name","icon","ListItem","Img","src","alt","concat","Text","nanoid"],"sourceRoot":""}
{"version":3,"file":"static/js/113.65f0bd40.chunk.js","mappings":"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","sources":["components/ExperienceItem/ExperienceItem.styled.jsx","components/ExperienceItem/ExperienceItem.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBack = styled(Link)`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    width: 100%;\n    border-bottom: ${p => p.theme.borders.deepsea};\n\n    margin-bottom: ${p => p.theme.space[3]}px;\n    padding: ${p => p.theme.space[3]}px;\n\n    :hover{\n        color: ${p => p.theme.colors.seablue};\n        text-shadow: ${p => p.theme.shadows.text};}\n\n    display: block;\n\n`;\n\nexport const Span = styled.span`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n`;\n\nexport const Text = styled.p`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    font-weight: ${p => p.theme.fontWeights.bold};\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n`;\n\nexport const List = styled.ul`\n    padding: ${p => p.theme.space[3]}px;\n    list-style-position: outside;\n    list-style: square;\n\n`;\n\nexport const Item = styled.li`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n`;\n","import { LinkBack, Span, Text, List, Item } from \"./ExperienceItem.styled\";\nimport { useContext } from \"react\";\nimport { ThrowContext } from '../../components/Context/Context';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { nanoid } from \"nanoid\";\nimport Box from \"components/Box/Box\";\n\nconst ExperienceItem = () => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/experience\";\n\n    const { company } = useParams()\n\n    const { selected } = useContext(ThrowContext);\n\nconst selectedCompany = selected.jobs.find(({companyName}) => companyName === company);\n\nconst { dateStart, dateEnd, position, responsibilities, country, city, companyName } = selectedCompany;\n\n    return (\n        <Box className=\"first\" key={companyName}>\n        <LinkBack to={backLinkHref}>Back</LinkBack>\n        <Box><Text>{position}</Text><Text><Span>{dateStart} - </Span><Span>{dateEnd} | </Span><Span>{city}, </Span><Span>{country}</Span></Text><List>{responsibilities.map(item => <Item key={nanoid()}>{item}</Item>)}</List></Box>\n        </Box>\n    )\n};\n\nexport default ExperienceItem"],"names":["LinkBack","styled","Link","_templateObject","_taggedTemplateLiteral","p","theme","colors","deepsea","shadows","first","borders","space","seablue","text","Span","_templateObject2","Text","_templateObject3","fontWeights","bold","List","_templateObject4","Item","_templateObject5","_location$state$from","_location$state","backLinkHref","useLocation","state","from","company","useParams","selectedCompany","useContext","ThrowContext","selected","jobs","find","_ref","companyName","dateStart","dateEnd","position","responsibilities","country","city","_jsxs","Box","className","children","_jsx","to","map","item","nanoid"],"sourceRoot":""}
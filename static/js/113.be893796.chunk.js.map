{"version":3,"file":"static/js/113.be893796.chunk.js","mappings":"oLAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wPACR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,OAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,KAApB,IAGC,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,QAAQH,OAApB,IAED,SAAAH,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IACP,SAAAP,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IAGC,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,OAAnB,IACK,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,QAAQK,IAApB,IAMXC,EAAOZ,EAAAA,GAAAA,KAAH,+FACJ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,OAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,KAApB,IAEC,SAAAL,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IAITI,EAAOb,EAAAA,GAAAA,EAAH,sHACJ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,OAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,KAApB,IAED,SAAAL,GAAC,OAAIA,EAAEC,MAAMW,YAAYC,IAAxB,IACC,SAAAb,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IAITO,EAAOhB,EAAAA,GAAAA,GAAH,2GACF,SAAAE,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IAMHQ,EAAOjB,EAAAA,GAAAA,GAAH,+FACJ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,OAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,KAApB,IAEC,SAAAL,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,I,2DCtBtB,EApBuB,WAAO,IAAD,IAEnBS,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,cAErCC,GAAYC,EAAAA,EAAAA,MAAZD,QAINE,GAFmBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBC,SAEqBC,KAAKC,MAAK,qBAAEC,cAAiCR,CAAnC,IAEnCS,EAA+EP,EAA/EO,UAAWC,EAAoER,EAApEQ,QAASC,EAA2DT,EAA3DS,SAAUC,EAAiDV,EAAjDU,iBAAkBC,EAA+BX,EAA/BW,QAASC,EAAsBZ,EAAtBY,KAAMN,EAAgBN,EAAhBM,YAEnE,OACI,UAACO,EAAA,EAAD,CAAKC,UAAU,QAAf,WACA,SAACvC,EAAD,CAAUwC,GAAIrB,EAAd,mBACA,UAACmB,EAAA,EAAD,YAAK,SAACxB,EAAD,UAAOoB,KAAgB,UAACpB,EAAD,YAAM,UAACD,EAAD,WAAOmB,EAAP,UAA2B,UAACnB,EAAD,WAAOoB,EAAP,UAAyB,UAACpB,EAAD,WAAOwB,EAAP,SAAqB,SAACxB,EAAD,UAAOuB,QAAsB,SAACnB,EAAD,UAAOkB,EAAiBM,KAAI,SAAAC,GAAI,OAAI,SAACxB,EAAD,UAAsBwB,IAAXC,EAAAA,EAAAA,MAAf,WAF5IZ,EAKnC,C","sources":["components/ExperienceItem/ExperienceItem.styled.jsx","components/ExperienceItem/ExperienceItem.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBack = styled(Link)`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    width: 100%;\n    border-bottom: ${p => p.theme.borders.deepsea};\n\n    margin-bottom: ${p => p.theme.space[3]}px;\n    padding: ${p => p.theme.space[3]}px;\n\n    :hover{\n        color: ${p => p.theme.colors.seablue};\n        text-shadow: ${p => p.theme.shadows.text};}\n\n    display: block;\n\n`;\n\nexport const Span = styled.span`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n`;\n\nexport const Text = styled.p`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    font-weight: ${p => p.theme.fontWeights.bold};\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n`;\n\nexport const List = styled.ul`\n    padding: ${p => p.theme.space[3]}px;\n    list-style-position: outside;\n    list-style: square;\n\n`;\n\nexport const Item = styled.li`\n    color: ${p => p.theme.colors.deepsea};\n    text-shadow: ${p => p.theme.shadows.first};\n\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n`;\n","import { LinkBack, Span, Text, List, Item } from \"./ExperienceItem.styled\";\nimport { useContext } from \"react\";\nimport { ThrowContext } from '../../components/Context/Context';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { nanoid } from \"nanoid\";\nimport Box from \"components/Box/Box\";\n\nconst ExperienceItem = () => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/experience\";\n\n    const { company } = useParams()\n\n    const { selected } = useContext(ThrowContext);\n\nconst selectedCompany = selected.jobs.find(({companyName}) => companyName === company);\n\nconst { dateStart, dateEnd, position, responsibilities, country, city, companyName } = selectedCompany;\n\n    return (\n        <Box className=\"first\" key={companyName}>\n        <LinkBack to={backLinkHref}>Back</LinkBack>\n        <Box><Text>{position}</Text><Text><Span>{dateStart} - </Span><Span>{dateEnd} | </Span><Span>{city}, </Span><Span>{country}</Span></Text><List>{responsibilities.map(item => <Item key={nanoid()}>{item}</Item>)}</List></Box>\n        </Box>\n    )\n};\n\nexport default ExperienceItem"],"names":["LinkBack","styled","Link","p","theme","colors","deepsea","shadows","first","borders","space","seablue","text","Span","Text","fontWeights","bold","List","Item","backLinkHref","useLocation","state","from","company","useParams","selectedCompany","useContext","ThrowContext","selected","jobs","find","companyName","dateStart","dateEnd","position","responsibilities","country","city","Box","className","to","map","item","nanoid"],"sourceRoot":""}